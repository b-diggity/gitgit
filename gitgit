#!/bin/bash

# Check for install
which git > /dev/null
if [[ $? != 0 ]]
then
	echo "git is not installed!"
	exit 1
fi

# Check for minimum version
GITVER=$(git --version | awk '{print $3}' | awk -F'.' '{print $1"."$2}')
GITMIN="2.25"
if (( $(echo "$GITVER < $GITMIN" | bc -l) ))
then
	echo "git version is too low! Update now!"
	echo "Your version: $GITVER | Minimum version required: $GITMIN"
	echo "sudo add-apt-repository ppa:git-core/ppa"
	echo "sudo apt update"
	echo "sudo apt install git"
	exit 1
fi

# Get current branch
TREEBRANCH=$(git branch --show-current)
THEBRANCH=$(git branch | sed 's/ //g' | grep -E "^(main|master)$" | head -1)

additional_commands()
{
	echo "Found additional commands. Running:"
	echo "$GITGITCMD"
	"$GITGITCMD"
}

branchit()
{
	if [[ "$NB" =~ ^[-A-Za-z0-9]+$ ]]
	then
		git pull --ff-only
		echo "Creating and switching to new feature branch: $NB"
		git checkout -b $NB
	else
		echo "Feature branch name required and can only contain letters, numbers and dashes."
		echo "Try: gitgit -b my-branch $NB"
		exit 1
	fi
}

commit()
{
	if [ ! -z "$GITGITCMD" ]
	then 
		additional_commands
	else
		echo "No additional commands found... continuing."
	fi

	echo "On Branch: $TREEBRANCH"
	git add .

	if [ -z "$CM" ]
	then
		COMMITNOW="Patch $(date --utc)"
	else
		COMMITNOW="$CM"
	fi

	git commit -m "$COMMITNOW"
	git push origin $TREEBRANCH

	echo "Thanks for using gitgit! Don't forget to delete this branch when finished: gitgit -d"
}

if [ $# -gt 1 ] && [[ "$1" != -b ]] && [[ "$1" != --branch ]]
then
	echo "Only 1 agument is supported."
	exit 1
elif [ $# -gt 2 ] && ([[ "$1" == -b ]] || [[ "$1" == --branch ]])
then
	echo "Only 2 arguments are supported for checking out a branch."
	echo "-b <name>"
elif [[ "$1" == -h ]] || [[ "$1" == --help ]]
then
	echo "Usage:"
	echo "gitgit 				Add, commit and push with generic message"
	echo "gitgit \"<message>\"		Add, commit and push with custom message"
	echo "gitgit <option>"
	echo ""
	echo "Options:"
	echo "-d|--delete    			Delete the current feature branch and switch to main/master"
	echo "-c|--cleanup			Remove any non-main/master branches"
	echo "-b|--branch <name>	Create and checkout a new feature branch"
	echo "-h|--help    			Display this help"
	echo "-v|--version 			Display the version"
	echo 
elif [[ "$1" == -v ]] || [[ "$1" == --version ]]
then
	echo "gitgit v0.0.69"
	echo "git $GITVER"
elif [[ "$1" == -c ]] || [[ "$1" == --cleanup ]]
then
	git checkout $THEBRANCH
	if [[ $? != 0 ]]
	then
		echo "Failed to checkout the main/master branch, exiting..."
		exit 1
	fi

	git pull --ff-only
	git fetch --prune
	BRANCHES=$(git branch | sed 's/ //g' | grep -vE "^\*?(main|master)$")
	for BRANCH in $BRANCHES
	do
		echo "Deleting branch $BRANCH"
		git branch -d $BRANCH
	done
	exit 0
elif [[ "$TREEBRANCH" =~ ^(main|master)$ ]]
then
	git status -s | grep -E "^ M|^\?\?" > /dev/null
	if [[ $? == 0 ]]
	then
		echo "You are on the main/master branch, HOWEVER changes have been detected!"
		if [[ "$1" == -b ]] || [[ "$1" == --branch ]]
		then
			NB="$2"
		else
			read -p "Would you like to create a new branch to move the changes to? (y/n): " ANS
			if [[ "$ANS" =~ ^(y|Y)$ ]]
			then
				read -p "Enter a new branch name (letters, numbers and dashes only): " NB
			else
				echo "Leaving changes on the main/master branch alone and exiting!"
				exit 1
			fi
		fi
		if [[ "$NB" =~ ^[-A-Za-z0-9]+$ ]]
		then
			echo "Creating new branch '$NB' and migrating changes to this new feature branch."
			git switch -c "$NB"
			if [[ "$1" == -b ]] || [[ "$1" == --branch ]]
			then
				echo "Run gitgit 'commit description' to push the changes"
			else
				sleep 1
				TREEBRANCH="$NB"
				CM="$1"
				commit
			fi 
			exit 0
		else
			echo "Invalid Branch Name, exiting! You still have changes on your main/master branch!"
			exit 1
		fi
	else
		if [[ "$1" == -b ]] || [[ "$1" == --branch ]]
		then
			NB="$2"
			branchit
		else
			echo "You are on the main branch, exiting..."
			exit 1
		fi
	fi
elif [[ "$1" == -d ]] || [[ "$1" == --delete ]]
then
	echo "Switching to $THEBRANCH, updating and DELETING $TREEBRANCH"
	git checkout $THEBRANCH
	git pull --ff-only
	git fetch --prune
	git branch -d $TREEBRANCH
elif [[ "$1" == -b ]] || [[ "$1" == --branch ]]
then
	NB="$2"
	branchit
else
	CM="$1"
	commit
fi
